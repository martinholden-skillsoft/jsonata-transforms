$.(
    $comment := '*******************************************************';
    $comment := '*******************************************************';
    $comment := 'TRANSFORM FOR A SHAREPOINT LIST';
    $comment := 'Author: martinholden-skillsoft';
    $comment := 'Date: 16-DEC-2020';
    $comment := 'Dependency: Uses functions from https://www.npmjs.com/package/jsonata-extended';
    $comment := '*******************************************************';
    $comment := '*******************************************************';

    $comment := '*******************************************************';
    $comment := '*******************************************************';
    $comment := 'Start of Custom JSONata Functions';

    $comment := '*******************************************************';
    $comment := '* Create a HTML description for the page, each of these';
    $comment := '* end with a <br/>';
    $comment := '*     Thumbnail';
    $comment := '*     Comma Delimited list of Authors from by';
    $comment := '*     Copyright Publisher and date from publication.publisher';
    $comment := '*     and publication.copyrightYear';
    $comment := '*     ISBN from publication.isbn';
    $comment := '*     localizedMetadata[0].description';
    $comment := '*     The content type contentType.displayLabel';
    $comment := '* @param {object} $row - The object to process';
    $comment := '* @param {string} [$extraHTML=] - extra HTML to include at top of description';
    $comment := '* @returns {string} object';
    $comment := '*******************************************************';
    $htmldescriptionobject := function($row, $extraHTML){(
        $thumbnail :=  $row.imageUrl ? '<img src="' & $row.imageUrl & '?width=400" alt="' & $row.localizedMetadata[0].title & '" class="img-responsive">' : '';
        $contenttype := $row.contentType.displayLabel ? $join(['Type:', $row.contentType.displayLabel],' ') & '<br/>' : '';
        $by := $count($row.by) = 0 ? '' : 'By: ' & $join($row.by, ', ') & '<br/>';
        $publisher := $row.publication ? $row.publication.publisher ? $join(['Copyright:', $row.publication.publisher],' ')  : '' : '';
        $year := $row.publication ? $row.publication.copyrightYear ? $join(['(c)', $string($row.publication.copyrightYear)],' ') : '' : '';
        $copyright := $row.publication ? $join([$publisher, $year],' ') & '<br/>' : '';
        $isbn := $row.publication ? $row.publication.isbn ? $join(['ISBN:', $row.publication.isbn],' ') & '<br/>' : '' : '';
        $publication := $row.publication ? $join([$copyright,$isbn]) : '';
        $description := $row.localizedMetadata[0].description ? '<br/>' & $row.localizedMetadata[0].description & '<br/>' : '';

        $lastupdated := $row.lifecycle.lastUpdatedDate ? $join(['Last Updated:',$moment($row.lifecycle.lastUpdatedDate).fromNow()],' ') & '<br/>': '';

        $join([$thumbnail,$extraHTML,$contenttype,$by,$publication,$description,$lastupdated])
    )};
    $comment := 'End of Custom JSONata Functions';
    $comment := '*******************************************************';
    $comment := '*******************************************************';


    $comment := '*******************************************************';
    $comment := '*******************************************************';
    $comment := 'START OF TRANSFORM';

    $comment := '*******************************************************';
    $comment := 'Transform the basic data, uses the CONSTANTS specified above';

    $required_columns := {
        'UUID': '',
        'TITLE': '',
        'DESCRIPTION': '',
        'LAUNCH': '',
        'THUMBNAIL' : '',
        'TYPE': '',
        'DURATION': '',
        'MODALITY': '',
        'STATUS': '',
        'LANGUAGE': ''
    };

    $transformed_data := (
        $.{
            'UUID': id,
            'TITLE': localizedMetadata[0].title,
            'DESCRIPTION': $htmldescriptionobject($),
            'LAUNCH': link,
            'THUMBNAIL': imageUrl,
            'TYPE': contentType ? contentType.displayLabel : '',
            'DURATION': (
                $duration := duration ? $momentDuration(duration) : $momentDuration('PT0');
                $formatNumber($floor($duration.asHours()),'#00') & ':' & $formatNumber($floor($duration.minutes()),'00') & ':' & $formatNumber($floor($duration.seconds()),'00')
             ),
            'MODALITY': (
                modalities ? $join(modalities,'|') : ''
            ),
            'STATUS': lifecycle.status,
            'LANGUAGE': $languageInfo(localeCodes[0]).language.name
          }
    );

    $comment := '*******************************************************';
    $comment := 'Merge the $required_columns object and the $transformed_data';

    $merge([$required_columns, $transformed_data]);
)